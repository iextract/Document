 
###1.引言

####1.1编写目的

物联网是指通过各种信息传感设备，如传感器、射频识别（RFID）技术、全球定位系统、红外感应器、激光扫描器、气体感应器等各种装置与技术，实时采集任何需要监控、连接、互动的物体或过程，采集其声、光、热、电、力学、化学、生物、位置等各种需要的信息，与互联网结合形成的一个巨大网络。其目的是实现物与物、物与人，所有的物品与网络的连接，方便识别、管理和控制。路由器作为互联网重要的设备之一，工作状态和安全水平直接关系到整个网络的稳定运行和数据可靠程度。网络设备的安全问题很大部分是由于网络设备存在漏洞导致，如远程控制，拒绝服务等。要想解决网络设备的安全问题，首先应该解决设备漏洞发掘。

####1.2项目风险

项目分析设计：陈宇轩，负责项目的可行性、收益等；
任务实现测试：王子鑫，负责漏洞挖掘的具体实现；
项目规划完善：李莞婵，负责项目的需求分析规划设计；

####1.3文档约定

正文字体以五号、宋体为主；
分条陈述，高层次需求将被细化的需求所承担；

####1.4项目分析

攻陷网络设备往往意味着可以对一个网络实施进一步的入侵，攻击网络设备比攻击一台服务器获得的平均收益更高。攻击设备的隐蔽性更好，网络设备处于大多数运维人员盲区，其安全问题未引起足够重视，攻击设备相比服务器和终端设备更不易发现和追踪。因此有更多的攻击者将攻击目标锁定在网络设备上。目前广泛应用的漏洞挖掘技术可以分为两类：
静态代码审计：代码审计技术根据分析对象的不同，可以分为源码审计和基于目标代码的漏洞挖掘。（白盒测试）模糊测试：使用模糊测试的方法可以发现那些在源代码审计中无法发现的关键漏洞。（黑盒测试）在路由器漏洞挖掘技术中，由于系统的封闭性，所以基本上是得不到源代码的。可以使用IDA等汇编工具帮助我们将二进制代码转换为可读性更好的汇编代码，以便对代码进行汇编层次的审计。
通常对路由器进行人工审计，需要具备审核人员熟悉二进制、多种汇编语言、操作系统底层的知识。一般采用的步骤为：
1.4.1使用IDA对目标程序进行反汇编。
1.4.2搜索可能造成安全漏洞的危险函数。
1.4.3跟踪危险函数如何提取和处理用户提供的数据的过程，判断是否存在安全漏洞

####1.5参考文献

《揭秘家用路由器Oday漏洞挖掘技术》 ，吴少华，电子工作出版社
《路由交换设备漏洞挖掘》 
 以及各类博客，openwrt
 
### 2.综合描述

#### 2.1 SOHO无线路由器概述
类型：tenda soho AC9/18/15
路由器提供了诸多配置方式，比如说：
***
2.1.1 Web配置界面（Web Interface）:
一个用户友好型的Web配置界面有助于用户随时进行设备更改和调试。当然，访问Web配置界面需要进行身份验证。

2.1.2 命令行界面（command-line interface）：通过命令行界面用户同样可以对路由器进行操作、设置。命令行界面可通过终端模拟器来访问，用户可利用计算机上已经安装的终端模拟器，在终端模拟器的窗口键入命令并获得从路由器返回的信息。
***
路由器除了可以使用上述两种方式进行配置外，还可使用诸如FTP和SMB服务器等方式进行配置。
此外，路由器还可采用“即插即用”（Universal Plug and Play，UPnP）方式进行配置。但使用FTP或Telnet等方式进行配置存在一定安全隐患，更安全的方法是选择更为高级的SFTP和SSH协议。
值得注意的一点是，纳入本研究的大部分路由器都默认启用了UPnP协议，从而可以允许未经身份验证的攻击者更改路由器的关键配置设置。
大多数路由器所提供的服务对于用户来说都是多余且无用的，这些功能有时反而被黑客利用实施网络攻击。

#### 2.2 IOT-SOHO无线路由器bin文件格式

2.2.1 bootloader
引导程序的主要功能是初始化硬件，将初始化硬件的抽象，硬件描述传递给并执行内核。
而TENDA SOHO AC9/18/15 使用的U-BOOT，是最常见的引导代码。
OpenWrt的主要优点在于，Bootloader的存在为用户和开发人员提供了其他可以清除设备的可能性。

2.2.2 FileSystems
OpenWrt的包管理提供了一个完全可写的文件系统，从应用程序供应商提供的选择和配置，并允许您自定义的设备，以适应任何应用程序。
其中包括Rootfs、OverlayFS（合并两个文件系统，其中一个只读，一个可写）、tmpfs（/ tmp驻留在tmpfs分区上，/ var是一个符号链接; / dev驻留在自己的一个tmpfs分区上）、SquashFS(SquashFS是一个只读压缩文件系统)、JFFS2(JFFS2是一个可写的压缩文件系统，具有使用LZMA进行压缩的日志和磨损均衡)、UBIFS(UBIFS是用于原始闪存的文件系统)、ext2。

2.2.3 OpenWrt File System Hierarchy / Memory Usage
| OpenWrt File System Hierarchy                                                                                                                                                |
| ---------- |:-------------------:|:----------------------:|:--------:|:-------------------------:|:---------------:|:---------------------:|:---------:|:-------:|:---------:|
|            | Flash Storage Partitioning                                                                            | Main Memory Usage                                       |
| Hardware   | m25p80 spi0.0: m25p64 8192 KiB                                                                        | main memory 32 768 KiB                                  |
| Layer1     | mtd0 u-boot 128 KiB | mtd5 firmware 8000 KiB                                        | mtd4 art 64 KiB | Kernel space 3828 KiB | User space 28 940 KiB           |
| Layer2     |                     | mtd1 kernel 1280 KiB   | mtd2 rootfs 6720 KiB                 |                 |                       | up to 50% | 512 KiB | remaining |
| mountpoint |                     |                        | /                                    |                 |                       |           |         |           |     
| filesystem |                     |                        | overlayfs                            |                 |                       |           |         |           |
| Layer3     |                     |                        | 1536 KiB | mtd3 rootfs_data 5184 KiB |                 |                       |           |         |           |
| mountpoint | none                | none                   | /rom     | /overlay                  | none            |                       | /tmp      | /dev    |           |
| filesystem | none                | none                   | SquashFS | JFFS2                     | none            |                       | tmpfs     | tmpfs   |           |



### 3.漏洞挖掘思路

3.1 获取IOT-SOHO无线路由器固件
3.2 获取运行时环境-查看开放端口-对对外开放端口或者是内网端口进行分析
3.3 查看开启端口二进制文件--分析交互流程

其中二进制文件看对数据的处理过程,看对recv的数据处理流程。

### 4.Tools

4.1 反汇编：IDA PRO
4.2 调试工具：GDB
4.3 固件分析扫描：Binwalk

### 5. 主要难点

5.1 交叉平台编译工具
由于直接在源里面搜索到的arm-linux-gnueabi-xx系列工具编译出来的 gdb是不能使用的，因其支持的内核版本不够低。
因此我们要自己编译armv5平台下的gdb。

5.2 二进制程序本身的逻辑处理流程不容易分析清楚

5.3 其中大量使用结构体来进行数据表示，无法做到快速处理（类型复杂）

5.4 针对异步事件的分发处理无法精确定位的定位处理函数
